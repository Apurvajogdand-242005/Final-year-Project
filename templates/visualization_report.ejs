<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Civic Connect - Visualization Report</title>
    <link rel="stylesheet" href="/static/style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background-color: #f5f5f5; }
        .report-container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .header { text-align: center; margin-bottom: 30px; }
        .header h1 { color: #333; margin-bottom: 10px; }
        .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px; }
        .stat-card { background: #f8f9fa; padding: 20px; border-radius: 8px; text-align: center; }
        .stat-number { font-size: 2em; font-weight: bold; color: #007bff; }
        .stat-label { color: #666; margin-top: 5px; }
        .charts-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); gap: 20px; }
        .chart-container { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 1px 5px rgba(0,0,0,0.1); }
        .chart-title { text-align: center; font-size: 1.2em; margin-bottom: 15px; color: #333; }
        .footer { text-align: center; margin-top: 40px; color: #666; font-size: 0.9em; }
        @media (max-width: 768px) { .charts-grid { grid-template-columns: 1fr; } }
    </style>
</head>
<body>
    <div class="report-container">
        <div class="header">
            <h1>üìä Civic Connect Visualization Report</h1>
            <p>Generated on <%= generatedDate %></p>
            <p>Total Complaints: <span class="stat-number"><%= totalComplaints %></span></p>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number" style="color: #28a745;"><%= priorityData.find(([k]) => k === 'high')[1] || 0 %></div>
                <div class="stat-label">High Priority</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" style="color: #ffc107;"><%= priorityData.find(([k]) => k === 'medium')[1] || 0 %></div>
                <div class="stat-label">Medium Priority</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" style="color: #dc3545;"><%= priorityData.find(([k]) => k === 'low')[1] || 0 %></div>
                <div class="stat-label">Low Priority</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" style="color: #007bff;"><%= locationData.length %></div>
                <div class="stat-label">Locations</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" style="color: #6f42c1;"><%= categoryData.length %></div>
                <div class="stat-label">Categories</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" style="color: #20c997;"><%= userData.length %></div>
                <div class="stat-label">Active Users</div>
            </div>
        </div>

        <div class="charts-grid">
            <!-- Daily Complaints Chart -->
            <div class="chart-container">
                <div class="chart-title">Daily Complaints (Last 30 Days)</div>
                <canvas id="dailyChart"></canvas>
            </div>

            <!-- Monthly Complaints Chart -->
            <div class="chart-container">
                <div class="chart-title">Monthly Complaints (Last 12 Months)</div>
                <canvas id="monthlyChart"></canvas>
            </div>

            <!-- Hourly Complaints Chart -->
            <div class="chart-container">
                <div class="chart-title">Complaints by Hour of Day</div>
                <canvas id="hourlyChart"></canvas>
            </div>

            <!-- Location Distribution Chart -->
            <div class="chart-container">
                <div class="chart-title">Top 10 Locations</div>
                <canvas id="locationChart"></canvas>
            </div>

            <!-- Category Distribution Chart -->
            <div class="chart-container">
                <div class="chart-title">Complaints by Category</div>
                <canvas id="categoryChart"></canvas>
            </div>

            <!-- Status Distribution Chart -->
            <div class="chart-container">
                <div class="chart-title">Complaints by Status</div>
                <canvas id="statusChart"></canvas>
            </div>

            <!-- Top Users Chart -->
            <div class="chart-container">
                <div class="chart-title">Top 10 Active Users</div>
                <canvas id="userChart"></canvas>
            </div>

            <!-- Priority Distribution Chart -->
            <div class="chart-container">
                <div class="chart-title">Priority Distribution</div>
                <canvas id="priorityChart"></canvas>
            </div>
        </div>

        <div class="footer">
            <p>This report provides comprehensive visualizations of complaint data for administrative analysis.</p>
            <a href="/admin/dashboard" style="color: #007bff;">‚Üê Back to Admin Dashboard</a>
        </div>
    </div>

    <script>
        // Daily Chart
        const dailyCtx = document.getElementById('dailyChart').getContext('2d');
        new Chart(dailyCtx, {
            type: 'line',
            data: {
                labels: <%- JSON.stringify(dailyData.map(d => d[0])) %>,
                datasets: [{
                    label: 'Complaints',
                    data: <%- JSON.stringify(dailyData.map(d => d[1])) %>,
                    borderColor: '#007bff',
                    backgroundColor: 'rgba(0, 123, 255, 0.1)',
                    tension: 0.4
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Monthly Chart
        const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
        new Chart(monthlyCtx, {
            type: 'bar',
            data: {
                labels: <%- JSON.stringify(monthlyData.map(d => d[0])) %>,
                datasets: [{
                    label: 'Complaints',
                    data: <%- JSON.stringify(monthlyData.map(d => d[1])) %>,
                    backgroundColor: '#28a745'
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Hourly Chart
        const hourlyCtx = document.getElementById('hourlyChart').getContext('2d');
        new Chart(hourlyCtx, {
            type: 'bar',
            data: {
                labels: <%- JSON.stringify(hourlyData.map(h => h.hour + ':00')) %>,
                datasets: [{
                    label: 'Complaints',
                    data: <%- JSON.stringify(hourlyData.map(h => h.count)) %>,
                    backgroundColor: '#ffc107'
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Location Chart
        const locationCtx = document.getElementById('locationChart').getContext('2d');
        new Chart(locationCtx, {
            type: 'doughnut',
            data: {
                labels: <%- JSON.stringify(locationData.map(l => l[0])) %>,
                datasets: [{
                    data: <%- JSON.stringify(locationData.map(l => l[1])) %>,
                    backgroundColor: ['#ff6384', '#36a2eb', '#ffce56', '#4bc0c0', '#9966ff', '#ff9f40', '#ff6384', '#c9cbcf', '#4bc0c0', '#ff9f40']
                }]
            },
            options: { responsive: true }
        });

        // Category Chart
        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        new Chart(categoryCtx, {
            type: 'pie',
            data: {
                labels: <%- JSON.stringify(categoryData.map(c => c[0])) %>,
                datasets: [{
                    data: <%- JSON.stringify(categoryData.map(c => c[1])) %>,
                    backgroundColor: ['#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6', '#1abc9c', '#34495e', '#e67e22']
                }]
            },
            options: { responsive: true }
        });

        // Status Chart
        const statusCtx = document.getElementById('statusChart').getContext('2d');
        new Chart(statusCtx, {
            type: 'bar',
            data: {
                labels: <%- JSON.stringify(statusData.map(s => s[0])) %>,
                datasets: [{
                    label: 'Complaints',
                    data: <%- JSON.stringify(statusData.map(s => s[1])) %>,
                    backgroundColor: ['#28a745', '#ffc107', '#6c757d', '#dc3545']
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // User Chart
        const userCtx = document.getElementById('userChart').getContext('2d');
        new Chart(userCtx, {
            type: 'bar',
            data: {
                labels: <%- JSON.stringify(userData.map(u => 'User ' + u[0])) %>, // Anonymized
                datasets: [{
                    label: 'Complaints',
                    data: <%- JSON.stringify(userData.map(u => u[1])) %>,
                    backgroundColor: '#9b59b6'
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Priority Chart
        const priorityCtx = document.getElementById('priorityChart').getContext('2d');
        new Chart(priorityCtx, {
            type: 'doughnut',
            data: {
                labels: <%- JSON.stringify(priorityData.map(p => p[0].charAt(0).toUpperCase() + p[0].slice(1))) %>,
                datasets: [{
                    data: <%- JSON.stringify(priorityData.map(p => p[1])) %>,
                    backgroundColor: ['#dc3545', '#ffc107', '#28a745']
                }]
            },
            options: { responsive: true }
        });
    </script>
</body>
</html>
